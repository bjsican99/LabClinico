<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAA3YAAAN2AX3VgswAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAAaKElEQVR4Xu2dC7BdVXnHIYEbDDcQSCCQG/JCCCGBYABJwiOYkBASiArjo4o4FWQUx2c7astotIpo
        ndJREEodFaaCj1LHgqK1o6LyEJ/1NRYrtPgCK1i1Fcsj7P5/J2ffrrPOf+2zzzn7nHvuyf1mfnCzzrfW
        Wa+z93p861t7ZFk2dEj2FsvFueJScb34lPiy+La4V/xKPFqHvwnjM3TQJQ5xSYO09nbfNdmxgZMNyQrx
        anGT+KF4XPBBlZAmafMdfNdKl5fJhg0cdCQLxUvEDeIBETZUP3lQ3CguFItdXgcdGziISEYFjX67CBth
        kLhTXCRmuTIMIjZwUJDsKdaL68T/iLCyB5nfC8YQ5H1PV7ZBwQZONBIGcfzafyTCii3LTnGfuFVcIS4W
        W8UpYpVYIuaKkTr8vWT9wQef/taVK99+5erVX373qlWPvPypT83OmDcvWzRzZjZtzz3d95SBMlCWvVxZ
        JxobOFFIZoiXif8QYSW24nfiZvFKcZx4ikvf8fCzn32ouFTcJXaKzPHz7duz2zZsyN557LHZlkMOyUb3
        2svlo4h/F3TEEZePicIG9hvJPuJV4mcirLQivi7eIk4Wbf+61KgLxJXiD3kjt8Mvn/Ws7NbTTstef9RR
        2XEHHODyl+In4hIxw+Wr39jAfiI5U/xYhJWU4qficnGUS6sMarxF4hrxaN6YVfDVM87IXnPkkdn8pzzF
        5dvBq+EMl8d+YgP7gWS++JgIK8XxmPiwOENMc2mVQY20VLxfPJY3Wi/4lZ4Mnzj55Ow5hx2W7T1tmitP
        DNPIQ1ye+4EN7CWS6YLH/W9FWBExrNBdK7qaX6tRjhDXiccfUgPdf8452fe3bMnu1C/2n9avzz4r7ti4
        MfvOmWdm9559du3Rnjdmt3xbab548eJspHVH+I14hei4g3eKDewVEhZw7hJh4WP+V1wtDnNptELCDGLF
        ASMjL3r+woVf3z429uSyWbOy/fbeu/RIfpYGeLzXn6tf8aVHH51dd9JJ2V3qMHQg19Ct+K463EuWLMlm
        tO4Id4iOyt0pNrAXSJiGPSzCAsd8RCxw8VNImDlsEIwNGBj2Yhm4xtwZM7JzFyzI3rN6de3X7Rq7iO+p
        IxDfpR1AHW1zZe0FNrBKJDzy3yGeFGFBQxgQbXLxHZLDxJ+Iz4pHRJxeX1iy777Zn2oW8I3Nm22Dp/gH
        jRGWjo7aNOtQV+8SPV87sIFVITlE3CbCwoXwuN8hWk6JJNPE2eIW8YSI05pQ1s6Zk71XTwbGGK7RY37x
        zGfWppAtXgsse4+5+qgKG1gFkmWiaEHnW+JIFzdEMke8Sdwv4jTaYk/BAs6hmqoxLjjhwAOzE8Xy/fbL
        Fsycmc3WOGGvzlf8ajDWeNOKFdkvtm+3DR/ztU2bsmNnz7Zp1WFtZIWrmyqwgd0iOUk8JMKChFwlyvzq
        Zwn26OP4SWhkHs2s1r3qiCOyq44/Pvvc6adnP962rTZFc40Q84Ozzso+ecop2V+uWpVdtHRpdvLcuWWn
        dOOMqZO9T99d5jt5Glyo73Hp1Pm1WOfqqFtsYDdIzhJshoQFyGG6c56L55Dwy4/TaILBGSP2vznhhOye
        rVttJXfLfZoiXqP0t82fn+0zfbrNh2Pl/vtnN+md79KMYbbBE8SlI6jTygeHNrBTJBeI1CicX/JSFy+F
        5I31uE0cNGPGowzAvviMZ3Q8PeuUn+nxfr0ai8WeggZr4PSDD86+tGGDTS/kmxpQHqNO49IQ1O0Frq46
        xQZ2AhkTqZH+50Xbe+QSxhHh/sATI9Omfeb9J574o/+scMGmGx7Q4/vj69Zlz1+4sOX4gXWI50mPdQGX
        Vg4DyVMPOsimIajjF7v66gQb2C6SbSL1y/97kdwBkzCPT672SVg8erk4/5ljY0epgr4WV9igwH7AWYce
        GpbdwkLTR9eutWnk0LG2j43Z+IK6ruR1YAPbQbJOpN75rOgllzclLxUYZPKPL4gDnR6oUvYTXw0raVD5
        1GmnZatb7BDyNHjbMcfY+DkMIFlBdPEF6x9dDwxtYFkkGGMyQg0zlnOZi5Mj4ZefN37O65yuKmOWYL/e
        VtSg8oGnPz1brBlJVMYGXrBoUe3X7uLnvHbZMhtXUPddTRFtYBkkYyK1f3+1ixMiWRzo53wo1lMF0Ph3
        hBUymaBxL9Mv/cCRkbis46yZM6fl7KXgSUAbdLxYZANbIdlLpIwzeeeX2tWS8NgP454Wfq6Cj4rbw4qY
        rLAOwUwgKu84C2fOzL6ycaONC7wOCsYEXxEdLRvbwFZIWKcOM5DDaL+0yZPkQPE68SHR0Piggt8YV8Rk
        hpnLSw8/PK6zcfbV4PCGNWtsXOBpUjA7uDyuvzLYwCIkjPjddI95fmXm0Crw+XEFDAt//bSnJVcWGRxi
        d+jiAVPExDoBbbLF1WURNjCFhF04t6XLCp9d5JGwifNscaL73KGCLhG/DQs+bNxy6qnZnMS4gOXsoicB
        i0WJBSgG1W2NB2ygQ0JDYrAQfmGOXd6VLBL/WteBW5xeiAo4XUzaQV87fOvMM2sbUUH9jMProGhMwLKx
        iye+JEqfRbCBDgkmS+EX5VyV0Geg6DrMSU4/R4XbERd2mPmJHulbEotHDAx/pMGjiwcFG0gvc3XrsIEx
        Evb1ecyHXwJs6dpdPcnb6zoxxzl9UKHWiifCQu4OMMJPdYJ1c+dmDybWCdhFTGwl/5eY5+o4xgbGSLBc
        Db8AMOaw+/mSZwhO58Rxvuf0QQVivn9vWMBOoDJvXLu2ZmxRJaRZZmu3U3gSpF4HFyxebOMA9gQJo5Ib
        XT3H2MAQCebYYcI5OxL6HLP6eV0nBPPu5EBQhbk+Lly70EAYekTfWxmk3ctOwJggNTC8vGBmQAd1cURL
        MzsbmCNhudadzyMs9ejHZCvWh9c7fVAhnhUXqhP4lZrvrRS+w313VTA7cFPE6ZoeYkvo4vAqSNgY/pvY
        x9V5jg3MkXCEKUwwx/YsCfb+sS58TtiRqQqwp/hOWKBOKfglVAbf4b67SlgncN+9v6Z+WCu5OHQOF0e8
        ytV7jg0ECadmOccWJgYfSehzKJNxQaz/S5E8+aLMnxMXplOGpQNAasXwhYsWWX1ImJyzV5A0v7OBIOEk
        a5gQ0MDWbl9yd10npOXqlDJe2Rav6wDr16/PduzY0RHEjdPrVwdg2djtHbBSmFof4NxBYkCYnBb6wF1z
        eI4zh4mA3eWTpAaKf+X0c5TpjXEhusF1ABqyUyFunF6/OgCwgeR2ETfOm2f1IbFriHW2dXLVFFAL3OXQ
        IEwAOKtnjy1JvljXCWFvoHBjSBn+QlyAbhi2DgBsJcd5AA6gOn3MzRJnEV+iIjW1QXPALrcsbuR/baxb
        118X6ISc7fRzlFkWfWwhOmUYOwA7gM6ohA2hlDEsB1JjfUGbNg3EG/5RC9jl1yaMCMzhrd2e5NN1nZDv
        ON0QZfRTcca7ZRg7AGBZFOcDrjn+eKvPucXEbuN6FauhHRr+UQvY5dwojAQfjvXquk8LdEKe5/RzlMnj
        4kxXwbB2AHA2hhw+SZ1AwmQ91hfXqVgNbdH4j10ncZyBp/VkIcH6J9blUVNoEaQMfjzOcBWU7QBPPvZY
        9vA3v9+S1198SVN6E9UBMDSN8wJvXrHC6jNGMPp4WhtVFYy3RUPDSPBxF0YA3LI0NajkKOHW++1gI0eZ
        my16suFTtgM88ftHsp/+LmvJa/9scJ4A4EzOsQtwB1JZsk64q2lon4bGkeDoMFQGa2okwXdfrMvCUaFP
        XWXuOXFmq2LYOwDnDtzhE04lO318FsW64nZVwXh7/P8f3koXmhwySfDC8d/1z0NeGevGKGMfjDNaFcPe
        AYATSHGe2DJ2unSYWLfOQlVDrT3GG0aCv9tQCb6efx4icTMFbNRb+udTxn4eZ7QqdocOwDG0OE+YkLGT
        6PQTLuzGXwPjDSNxe/5vyT8PkVwW6OR81OmGKEOr4gxWye7QAVgXcPaAb1i+3Oq7OhE3qBpqbTLeOBI8
        X4dKcHL+eYjkG4FOzh873RBl6I1xBqtkd+gA4KZ4h4+OWl2cWca64gFVQ61Ndv1njz1WBh/m4H616bCB
        BIMPZxbe0rmTMvSlOINVsrt0AI6mx/kCXN3Furi9S7i1rR0pqzWMhAsQwg/hZj6LkfxRoJPzA6cbosxw
        uPPxMHNVs7t0APwTOCcVqdkA3lJiXfFqVYX+4j+7bsEIPwQ7ope46d8VTjdEGTk3zhhUacOHK5c4b1V3
        AL7DfXe7dGtjiKeSOG/nLVhgdTloEuuKm1QV+ov/7LoKJfwQrPWuxNn7tTyRoozgprUhY7224YOqO0CV
        dGNjiLuaOD1c5bgNIrycx7rih6oK/W/XnD527sAKX9OUTnJM/fMQjETKTP/uiTPWDxu+Qe4A0KmNIT6L
        3IYPHk1jXVzdGy+ptDltX7sRK/7wPtVTUyNKcOgQ6/6z0w1RJjjt0+SkmUehSa9SbrmFw0iNUrYDfOjj
        t9g0q4Q6iOulLO6Vx4khp8ulF7GuoO1r16LFH9yqempqSInz2tXyVKoywFm/pkz1ugMcffTR2c6dO5WF
        RinbAe7/zc7siKOOtmlXRTcdABd2cXr4Nna63HwS6wravnY3XvyBHdRJ8O8X69ZGk0UoA5viDIHrAN3Y
        8IXwy3eNj5TtAEAn4EnA66Bb1pxSrY0hfgzj9HCX53S5/ibWFbS93f+/WPXU1JASt/37fKcbogy8PM4Q
        uA5A4/Va2ukAVUIniMvbTQfAmWWcHku/TvcKb2pO29duyYw/2Kp6ampICbdqxrqnO90QZeDdcYZgqgN0
        1wE4IxCnhwcyp4tXslhX0Pa2UU9RPTU1pCQ86p2z3OmGKANNU0CY6gDddQBw28Pu0otP+yVh2t764l2l
        empqSAmnTmPdpGu3HGXAunqZ6gDddwAcXMdpcvNJrIeX0lhP0Pa1S5PjD5aonhoaUcI5wVjv0VjPoQzc
        HGcIpjpA9x0AL+dxmm5PgO3iWE/Q9k2++mCu6qmhESW4h4n1fhrrOZQBa/9ftgOUteEry6+Ea6Be04sO
        4I6UcwdSrIejiVhP0Pa1Ax/xB00HOiQnBJ/nWIORGGXAunct2wEm6hdbNb3oANx3EKfJRVixHnYEsZ6g
        7Ut3gLXB5zl3xnoOZWCqA4hB7QBlXwG4hY31kh4/QpSBrl4BUx0gTRWvgLKDQLx2x3r3x3oOZaCrQeBU
        B0hTxSCw1DRQckDwec6vYz2HMtDVNHCqA6SpYhpYaiFIwpHxWO/xWM+hDHS1EDTVAdJUsRDUzlKwu+51
        vtMNUQa6Wgqe6gCeqpaC29kM4mbOWHeD0w1RBrraDJrqAJ6qNoPa2Q7+u0An5xVON0QZ6Go7+M1/fmmt
        8tqBLVy2cl1DtMPusB3cjkGI6yxXOt0QZWBCDEIw5uimE+wuBiHtmISdF+jkfNHphigDE2YSxq/XNW4Z
        dheTsHaMQl1nwXvI7Fg3RpmYEKNQHr2ucctAXJdmlUy4USiNIyllFi7BfxB+/2Ld82PdGGVkQszCB7kD
        DIRZeO0/7R0McYdIP+F0Q5SRCTkYUnUHGOSDITiKdLplDoa0czTMuZDjDruZTj9HGZmQo2FVdwC+w313
        P0kdDXtPF0fD3EZP6nCo2xOAc2PdGGWm74dDh7EDpA6H4h0s1i04HLqSNhlvHMkDwYc5qePh9wQ6OdaT
        WIgy1Pfj4cPYAdzxcK7Md7qJ4+EP5m0y3jiSGwKFnJSDiB2BTg43irTyDNp3BxHD1gFSDiK4Sd3puzoR
        45dJjDeOxL3bUy5ilgjnI6DMIdG+uogZtg7gXMTANzZvtvoJFzEX5u0x3jCS1Lu9yUlUXZ/bqWLdJkeE
        McpUX51EDVsHcE6i1s6ZY3ULnESNe31taByJuw425SbOPTFYXLAdJkcZ66ubuGHqABW5iWsw42toHIlr
        1JSjSLyKupvEPhnrhihjfXUUOUwdoCJHkReF7dHQOJJRgTvRMAKkXMW+IdAJOdXp5yiDfXMVOywdIOUq
        9k3tuYrFDXDD9b4NDVML8C5gUs6i9xHuWpm7nX6OMtg3Z9HD0gEqchZ9fdwWDf+oBbTvLv5FdZ2Y5zr9
        HGWyL+7ih6EDpNzFv69H7uLbvTACfWdYisVpcl1AGe3LhRGTvQOkLoxYuf/+yb2Eri6MqAX6wWDRlTGp
        O4Ne4/RzlNmeXxkz2TtA6sqYm3p1ZUwtcJeNABcNhQmAvTQKJJ8J9HIeEsnTw8pwzy+NmswdIHVpFLeJ
        OX1IXBrFBWBN+zrQFJAjeVk9ckjRtXF4EHP3B3Bp5HQXB5Tpnl4bhx0eDdkJVdvwtUPRtXHY+Ls4BdfG
        WSNfsIEg4Tg4lw6GCYG9OBIkHwj0Qt7r9EEZn7o40pC6OPJ5CxdafUhcHMksLTkWs4E5ktRVsKmrY+cL
        50QCXuriKONTV8dGpK6Oxeafd7yLU3B17CWu3nNsYI6EeT4XEIcJAiPK1OXRm8QTIo7DVPI0F0cFmLo8
        uk7q8mge/RzucHEKLo9OtlOODQyR0KBhojmc4EjFST05OI3adPAUVJCp6+M1f09dH/82zQZcHCh48tkV
        3BAbGCNxdoAMCI90+iD527pezPdEw81VoILMEveGBesEGqgqG8OQbm34WvGTc86xR73hBQUXRn9t06bU
        wG98z78IGxgjmSfcu/1bIvUqYCrptozhH0XTBpMKxOJQTzaKBhk61haz0QNr5sypLQa5eDz6j50928Vj
        ky55Y3uIDXRI3LQQrnL6IOFyCXcJNdAJ3JNgR1zQYYZffqrxF86cmd2zdauNBxeak0F1Wh7Xy7GBDglL
        vqlf9HkuDkhYH3A3jAGvg4YxgQrGKaI7woIOK7zzU4/9fTXiT10TD5wAcvHEHaLw4s4QG5hCMiacSxke
        OUtdHJBsF86EDEivYXagAnKW8LdhgYcNRvupAR8j/hvWrLHx4JubN1u7QPGwsMv1KWxgEZItwjUmG0IN
        e80hklcKt1IITBEb1glU0PPjgg8LzPMTu3W1K+A4yOHiAcYf3Bxu4tIm28I6LIMNbIXk8vqXxnxepFed
        dj0JUq8DeK8YXzZWga1rmckKy7upFT7gsV/0y2cweOpBB9m44l1hXZfFBrZCgruYr9S/OAaP4sl3kIQx
        QWpgCOwd1DaQVOhRcXtYCZMVNnbc2n4OA76idz4zhe1jYzauwJbTbva0wgaWQcJ4wO0VQHLXECQHiVQH
        AnYRXyNGVHjWBybtoJBfLVu6blcvh6tfcePm4uckdvmANhhz9VwGG1gWCUfKuDI2zFDOZS5OjmREfLCu
        mwKjkueqAugEd4UVMhnAkscZc4RcsHhx9mBinp/z2mXLbFxB3dfu/+sUG9gOknWCw6FhxnKuFoVTEsnr
        RGpwmHP34aOjW1QZlW0d9xIMOJ0NX8h0jfQvLxjsAY/9gl8+Bp7rXJ22gw1sF8k2ETuZyGFMUHhkTLJV
        OA9kDYxMm/bp2zZs+K6rrEEAu31nuh2zv6Zw7N65NHJ4dRS886nrtkf8DhvYCZIXi9Rcn9lBcooIEryR
        47Wq1dPg8bPnz3+II1KpJdJ+Qh7ICyd23KGNEOb3L1y0qObezaWVw1SvYLRPHV/g6rATbGCnkDGRehKw
        TpBcLMqRrBLMBOL4TbAYgvkzx6U5M+8qsxfwXXwn351YkGli47x5haP8HBZ5EvN8oG4ra3ywgd0g4XXA
        +ynMeA4rhsll4xDJZvEvIk7DgsMEvGbgOgX/Oa5yu4E0SZvvcM4ZUtCYHNJwacawvFvQoajTs1xddYMN
        7BYJA8PU7AC4fq7QUAEk0wSvFnf4JAmrbLhywY0avvRwqNjqsRuCLnGISxqklVq5S8GhjWuOP9767Ilh
        V69gYweYFp/k6qhbbGAVSJgiptYJgK3kpD1BiATLpDcKdxaxNLyjca6Mh202YfC1D/xNGJ+1eo+3gl/w
        m1esSJ7YiWE/P7Glm4N19jJXL1VgA6tCwmKRO3Gcg1EJziZaPg1AwoFUziw4B9cTBuv3LOZwStcd1HTw
        q8fQJGHMkXObKLWv3yk2sEokLBu/S6RmCIDtmjU0TSE5XPyFcDaLfeHw0dHsDcuX17Z1XSOnYAqYsOHL
        oa7eIZLm9FVhA3uBhMEh25VhQWM+Iuy5gyIki8WF9fjOj2El4IePO/r5pbtLGVqB3X7CdDuEOrLe2nuB
        DewVEub6GCyEBY7htcAKYlv72jkSDFeWHzgy8oLzFy26W1O1J3GTgkm1wkuBLnFwvIzvXUbneOAsM6Bz
        YMrNil6Lxz3cJRa6cvUKG9hLJIzsXyFaDeg4i3itsKeSy6IGOEJcJx7HZRq3afDr5V4dLlcC/iaMz9xl
        C53CKV0OaibO6oWwCooldc8f+TE2sB9IDhHO2jgGY5EPCw6gljZ1ilGDLBW4q21yWl0lrN8z72eRqOTU
        8WOi5aUbvcIG9hMJDeuOoztwV4MxSqEfoiLUSIvENeLRvNGqgH0AfPIk3LI4fizOdHnsJzaw30g4h3iJ
        aGfBh9tL3iJOFm0bQ6jRFogrxR/yRmwHXhU4YWQql3DFloK1ER73+7h89RsbOFFIsBG4WBRZDDlwa3uz
        wO7wONHk6j6FGvNQcanA3mAnjevA5Tpet7HXw/duwv1qESzoYFpfas2jX9jAiUbC2gELPmVfDTHsKN4n
        bhVXCDoVW86nCDabcHTJmQU6HPD3kvUHH3z6W1eufPuVq1d/+d2rVj3CNSvctMFlC8bfflkoA2XZ25V1
        orGBg4KEKR0+i9gmTm0wDSJ4WsPZFnlvcssySNjAQUTCMvBF4k4RVvYgwbI3v/amE0+Dig0cdCT5yh/T
        yAdF2Aj9BA/rONmm0fu6gFMVNnCyIVkpuPSCm0+4/iZllNINpEnafAff1ZUx5qBgAyc7Ek4mc8EV16Jx
        1R1jCG7JZBcRyySsjTmSxmoj8DdhfIYOusQhLmmQ1kAO4roj2+P/AHlib6Xul/r5AAAAAElFTkSuQmCC
</value>
  </data>
</root>