<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>